# docker-compose.yml
version: '3.8'

services:
  # PHP-FPM 8.4 Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    container_name: dev_php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./laravel-app:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - dev_network
    depends_on:
      - redis
    environment:
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d:/usr/local/etc/php/custom.d

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: dev_nginx
    restart: unless-stopped
    ports:
      - '8080:80'
      - '8443:443'
    volumes:
      - ./laravel-app:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dev_network
    depends_on:
      - php

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dev_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - dev_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dev_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-laravel_dev}
      MYSQL_USER: ${MYSQL_USER:-laravel}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-laravel123}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - dev_network

  # Composer (for dependency management)
  composer:
    image: composer:latest
    container_name: dev_composer
    volumes:
      - ./laravel-app:/app
    working_dir: /app
    entrypoint: ["composer"]
    networks:
      - dev_network
    profiles:
      - tools

networks:
  dev_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local
